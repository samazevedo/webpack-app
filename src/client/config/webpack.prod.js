const path = require('path');
const { merge } = require('webpack-merge');
const common = require('./webpack.common');
const MiniCssExtractPlugin = require('mini-css-extract-plugin');
const WorkboxWebpackPlugin = require('workbox-webpack-plugin');

// const TenserPlugin = require('tenser-webpack-plugin')

module.exports = merge(common, {
	mode: 'production',
	output: {
		filename: 'bundle.[contenthash].js', // must match with the index.html
		path: path.resolve(__dirname, '../../../dist/client'), // folder name generated by webpack
		publicPath: '' // define the folder to the public path
		// clean: {
		//     dry: true,
		//     keep: /\.css/,
		// },
	},
	devtool: 'source-map',
	devServer: {
		hints: false
	},
	module: {
		rules: [
			{
				test: /\.css$/i,
				use: [ MiniCssExtractPlugin.loader, 'css-loader', 'postcss-loader' ]
			},
			{
				test: /\.s[ac]ss$/i,
				use: [
					MiniCssExtractPlugin.loader,
					'css-loader',
					'postcss-loader',
					'sass-loader'
				]
			}
		]
	},
	plugins: [
		new MiniCssExtractPlugin({
			filename: 'css/styles.[contenthash].css'
		}),
		new WorkboxWebpackPlugin.GenerateSW({
			clientsClaim: true,
			skipWaiting: true
		})
	]
});
